services:
  postgres:
    image: postgres:latest
    container_name: tradeagent-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: TradeAgentDb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: tradeagent-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 5s
      retries: 12
      start_period: 10s

  redis:
    image: redis:latest
    container_name: tradeagent-redis
    ports:
      - "6379:6379"
    restart: always

  api:
    build:
      context: .
      dockerfile: TradeAgent.API/Dockerfile
    container_name: tradeagent-api
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultDbConnection=Host=postgres;Port=5432;Database=TradeAgentDb;Username=postgres;Password=admin123
      - Redis__REDIS_CONNECTION=redis:6379
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Port=5672
      - RabbitMq__Username=admin
      - RabbitMq__Password=admin123
    depends_on:
      - postgres
      - redis
      - rabbitmq

  consumer:
    build:
        context: .
        dockerfile: TradeAgent.Consumer/Dockerfile
    container_name: tradeagent-consumer
    environment:
      - Redis__REDIS_CONNECTION=redis:6379
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Port=5672
      - RabbitMq__Username=admin
      - RabbitMq__Password=admin123
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  pgdata:
  rabbitmq_data:
